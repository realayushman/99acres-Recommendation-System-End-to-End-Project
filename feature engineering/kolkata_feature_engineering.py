# -*- coding: utf-8 -*-
"""kolkata Feature Engineering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ynXfcgvWr7te3v8naTSo-xSIKOI4CExL
"""

import pandas as pd
import numpy as np

df=pd.read_csv('clean_kolkata.csv')

df

#possible drop cols
'PROP_ID','PROP_NAME','SOCIETY_NAME','location','BUILDING_NAME','FORMATTED_LANDMARK_DETAILS','SECONDARY_TAGS','PROP_HEADING','MAP_DETAILS','CITY','PROPERTY_TYPE','DESCRIPTION','SUPERBUILTUP_SQFT'

#count go deep
'location','FORMATTED_LANDMARK_DETAILS'

#might use nlp
'BUILDING_NAME','SECONDARY_TAGS','PROP_HEADING','DESCRIPTION'

df.drop(['PROP_ID','PROP_NAME','SOCIETY_NAME','location','BUILDING_NAME','FORMATTED_LANDMARK_DETAILS','SECONDARY_TAGS','PROP_HEADING','MAP_DETAILS','CITY','PROPERTY_TYPE','DESCRIPTION','SUPERBUILTUP_SQFT'],axis=1,inplace=True)

df.sample()

df.columns

df.isnull().sum()

#there are many columns that has a lot of null values
'FLOOR_NUM', 'CARPET_SQFT','BUILTUP_SQFT', 'SUPER_AREA', 'SUPERAREA_UNIT', 'SUPER_SQFT'

df_filtered = df[df[['CARPET_SQFT','BUILTUP_SQFT', 'SUPER_AREA', 'SUPERAREA_UNIT', 'SUPER_SQFT']].notnull().all(axis=1)]

df.SUPERAREA_UNIT.value_counts()

df_filtered[['CARPET_SQFT','BUILTUP_SQFT', 'SUPER_AREA', 'SUPERAREA_UNIT', 'SUPER_SQFT']]

df['FURNISH']

df['AMENITIES']

df['AMENITIES'].info()

value_scores = {
    'Lift(s)': 95,
    'Power Back-up': 92,
    'Security Personnel': 91,
    'Fitness Centre / GYM': 90,
    'Swimming Pool': 89,
    'Club house / Community Center': 88,
    'Park': 87,
    'Private Garden / Terrace': 85,
    'Grade A Building': 84,
    'Centrally Air Conditioned': 83,
    'Access to High Speed Internet': 82,
    'Security / Fire Alarm': 81,
    'CCTV Surveillance': 80,
    'Piped-gas': 79,
    'Water Storage': 78,
    'Service / Goods Lift': 76,
    'Maintenance Staff': 74,
    'Rain Water Harvesting': 73,
    'Intercom Facility': 71,
    'Visitor Parking': 70,
    'WheelChair Accessibilitiy': 68,
    'Cafeteria / Food Court': 65,
    'Shopping Centre': 63,
    'DG Availability': 60,
    'Feng Shui / Vaastu Compliant': 59,
    'Bar / Lounge': 56,
    'Grocery Shop': 54,
    'Conference room': 50,
    'Bank Attached Property': 47,
    'ATM': 45,
    'Near Bank': 42,
    'Water purifier': 40,
    'Waste Disposal': 35
}

amen_id=pd.read_csv("AMENITIES.csv")

amen_id.drop(['type','category'],axis=1,inplace=True)

amen_id

score_df=pd.DataFrame(list(value_scores.items()),columns=['label','SCORE'])

score_df

merge=pd.merge(amen_id,score_df,on='label')

merge

score_map = dict(zip(merge['id'], merge['SCORE']))

# Step 2: Convert amenity IDs to scores
def calculate_total_score(amenities):
    if amenities == "0" or pd.isna(amenities):
        return 0
    ids = map(int, amenities.split(','))
    return sum(score_map.get(i, 0)/10  for i in ids)

# Step 3: Apply the function to your AMENITIES column
df['AmenityScore'] = df['AMENITIES'].apply(calculate_total_score)

df[['AMENITIES','AmenityScore']]

df.columns

df.info()

from sklearn.preprocessing import LabelEncoder
le= LabelEncoder()

"""we have already price per unit area available so we will leave 'AREA','PRICE' for later"""

df=df[df['FLOOR_NUM']!='0']

floor_map={'B':-2,"G":0,"L":-1}

df['FLOOR_NUM'].astype(str)

def conv(floor):
    if floor in floor_map:
        return floor_map[floor]
    elif floor=='nan':
        return 0
    elif str(floor).isdigit():
        return int(floor)
    else:
        return floor

df['FLOOR_NUM']=df['FLOOR_NUM'].apply(conv)

df[['FLOOR_NUM']].value_counts()

df['FLOOR_NUM'].fillna(0,inplace=True)



df[['FLOOR_NUM']].value_counts()

df[['FLOOR_NUM']].info()

df['FLOOR_NUM']

df[['FEATURES','AMENITIES']] #similar

df.drop(['FEATURES','AMENITIES','lat_long','city'],axis=1,inplace=True)

df['preference']=le.fit_transform(df['PREFERENCE'])

df[['PREFERENCE', 'TRANSACT_TYPE', 'OWNTYPE', 'BEDROOM_NUM']]

df.info()

df.columns

df.drop(['PREFERENCE','SUPER_AREA','SUPERAREA_UNIT'],axis=1,inplace=True)

df

df.to_csv('featured_kolkata.csv', index=False)

from google.colab import files
files.download('featured_kolkata.csv')

